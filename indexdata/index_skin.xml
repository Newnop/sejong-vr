<?xml version="1.0" encoding="UTF-8"?>
<krpano version="1.20.11">

    
  <!-- Spot Style - Default Point Spot Style -->


  <style name="IconDefaultPointSpotStyle"
         url="%FIRSTXML%/spots/spot50_user_defaultpoint0.png"
         visible="false"
         edge="center"
         onloaded="showPermanentTooltip(all);"

         height="50"
         width="50"
         />



        
  <!-- Video Spot Style - Default Video Spot Style -->
  <style name="RectVideoDefaultVideoSpotStyleLoader" url="%FIRSTXML%/spots/loadanimation.png" crop="0|0|64|64" ypos="0" frame="0" distorted="true" visible="false" />
  <style name="RectVideoDefaultVideoSpotStyle"
         capture="false"
         visible="false"
         distorted="true"
         scale="1.0"
         url.html5="%FIRSTXML%/graphics/videoplayer.js"
         loop="true"
         autoresume="true"
         pausedonstart="true"
         pausedonstart.android="false"
         pauseothersounds="true"
         canstart="false"
         onhover="onhoverRectVideoDefaultVideoSpotStyle"
         onout="onoutRectVideoDefaultVideoSpotStyle"
         onvideoready="onvideoreadyRectVideoDefaultVideoSpotStyle"
         />
  <style name="RectVideoDefaultVideoSpotStyle" 
    directionalsound="true" 
    range="90" 
    devices="flash" 
  />
  <style name="RectVideoDefaultVideoSpotStyle" 
    directionalsound="false" 
    devices="html5" 
  />
  <style name="RectVideoDefaultVideoSpotStyle" stateVideo="startplaying" devices="no-ios"/>
  <style name="RectVideoDefaultVideoSpotStyle" stateVideo="startpaused"  devices="ios"   />
  <style name="RectVideoDefaultVideoSpotStyle" stateVideo="startplaying" devices="ios10" />
  <action name="onhoverRectVideoDefaultVideoSpotStyle">
    showTooltip('hotspot');
  </action>
  <action name="onoutRectVideoDefaultVideoSpotStyle">
    hideTooltip();
  </action>
  <action name="onvideoreadyRectVideoDefaultVideoSpotStyle">
    set(isVideoReadyForPlaying, false);
    if (isvideoready,
      if(panovideospotsstate,set(canstart, true););
      if (canstart,
        set(isVideoReadyForPlaying, true);
      );
    );
    if(isVideoReadyForPlaying,
    ifnot(device.ios,
      inc(videospots_playing);
      pauseTourSoundsActions(true,true,true,true,true);
    );

    if(tour_displayspots,
      if(ispaused,
        if(stateVideo == "startplaying",
          set(stateVideo, "playing");
          play();
        );
      );
    );
    if (tour_soundson,
      div(volume, tour_soundsvolume, 100);
    ,
      set(volume, 0);
    );
    onvideoreadyspecific();
    ,

      delayedcall(0.5,onvideoreadyRectVideoDefaultVideoSpotStyle());
    );
  </action>
  <action name="animatevideospotloaderRectVideoDefaultVideoSpotStyle">
    if(hotspot[%1],
      if(hotspot[%1].activated,
        set(hotspot[%1].visible, true);
      );
      inc(hotspot[%1].frame,1, 11,0);
      mul(hotspot[%1].ypos, hotspot[%1].frame, 64);
      txtadd(hotspot[%1].crop, '0|', get(hotspot[%1].ypos),'|64|64');
      delayedcall(%2, 0.1, animatevideospotloaderRectVideoDefaultVideoSpotStyle(%1, %2) );
    ,
      stopdelayedcall(%2);
    );
  </action>
  <action name="stopvideospotloaderanimationRectVideoDefaultVideoSpotStyle">
    removehotspot(%1);
  </action>



    
  <!-- Spot Style - open box web -->


  <style name="Iconopenboxweb"
         url="%FIRSTXML%/spots/spot50_user_defaultpoint2.png"
         visible="false"
         edge="center"
         onloaded="showPermanentTooltip(all);"

         height="50"
         width="50"
         />



    
  <!-- Spot Style - goto_url -->


  <style name="Icongoto_url"
         url="%FIRSTXML%/spots/spot50_user_defaultpoint3.png"
         visible="false"
         edge="center"
         onloaded="showPermanentTooltip(all);"

         height="50"
         width="50"
         />



<!-- ********** -->
<!-- SkinPlus -->
<!-- id : SkinPlus -->
<!-- ********** -->

<!-- Skin Plus 3.5.2 - Copyright Panotourplugin.com - 2021 -->
<!-- Code Maurizio Chiocchetti    -->


 
<include url="%FIRSTXML%/graphics/skinplus/core.xml" />
<action name="check_normal_hs">
  if(%1,
  for(set(hs_m,0), hs_m LT hotspot.count, inc(hs_m), if(hotspot[get(hs_m)].style == "IconHotspot_mark_1" || hotspot[get(hs_m)].style == "IconHotspot_mark_2" || hotspot[get(hs_m)].style == "IconHotspot_mark_3" || hotspot[get(hs_m)].style == "IconHotspot_mark_4" || hotspot[get(hs_m)].style == "IconHotspot_mark_5" || hotspot[get(hs_m)].style == "IconHotspot_mark_6" || hotspot[get(hs_m)].style == "IconHotspot_mark_7" || hotspot[get(hs_m)].style == "IconHotspot_mark_8" || hotspot[get(hs_m)].style == "IconHotspot_mark_8" || hotspot[get(hs_m)].style == "IconHotspot_mark_10", set(scenet_alt, get(hotspot[get(hs_m)].linktarget)); set(visit_alt, get(scene[get(scenet_alt)].seen));
      create_check_alt(get(hs_m));
      if(visit_alt,
      txtadd(nos_alt, checkicon_alt,get(hs_m) );
      set(layer[get(nos_alt)].visible,true);
      set(layer[get(nos_alt)].alpha,1);
        ););););
  </action>


<events name="langstart"
keep="true"
onxmlcomplete="if(lang !== null,
set(tour_language, get(lang));
events.dispatch(changetourlanguage);,
set(tour_language, get(tour_language)););"
/>


<action name="create_check">
addlayer(checkicon%1);
set(layer[checkicon%1].width,45);
set(layer[checkicon%1].height,prop);
set(layer[checkicon%1].type,image);
set(layer[checkicon%1].url, '%FIRSTXML%/graphics/skinplus/');
set(layer[checkicon%1].enable,true);
set(layer[checkicon%1].align,bottomright);
set(layer[checkicon%1].edge,bottomright);
set(layer[checkicon%1].visible,false);
set(layer[checkicon%1].children,true);
set(layer[checkicon%1].scalechildren,true);
set(layer[checkicon%1].alpha,0);
set(layer[checkicon%1].capture, false);
set(layer[checkicon%1].x, -10);
set(layer[checkicon%1].y, -10);
set(layer[checkicon%1].parent, hotspot[%1]);
</action>

<action name="create_check_alt">
addlayer(checkicon_alt%1);
set(layer[checkicon_alt%1].width,45);
set(layer[checkicon_alt%1].height,prop);
set(layer[checkicon_alt%1].type,image);
set(layer[checkicon_alt%1].url, '%FIRSTXML%/graphics/skinplus/');
set(layer[checkicon_alt%1].enable,true);
set(layer[checkicon_alt%1].align,bottomright);
set(layer[checkicon_alt%1].edge,bottomright);
set(layer[checkicon_alt%1].visible,false);
set(layer[checkicon_alt%1].children,true);
set(layer[checkicon_alt%1].scalechildren,true);
set(layer[checkicon_alt%1].alpha,0);
set(layer[checkicon_alt%1].capture, false);
set(layer[checkicon_alt%1].x, -10);
set(layer[checkicon_alt%1].y, -10);
set(layer[checkicon_alt%1].parent, hotspot[%1]);
</action>



<events name="SkinPlushotspot_mark" keep="true"
onxmlcomplete="check_normal_hs();"
onnewpano="check_normal_hs();"
/>














<krpano SkinPlusbarbuilt="false" SkinPlusbackgroundwidthwhenclosed="0" SkinPlusbackgroundwidthwhenopened="0" SkinPlusIsOpened="false" />

<k_setting
    speed="0.5"
    button_offset=""
    margin_flag_ico="100"
    flag_lang_1=""
    flag_lang_2=""
    flag_lang_3=""
    flag_lang_4=""
    flag_lang_5=""
    flag_lang_6=""
    flag_lang_7=""
    flag_lang_8=""
    flag_lang_9=""
    flag_lang_10=""
    context_menu_bool="false"
    plugname="SkinPlus"
    pluginDirectory="graphics/skinplus"
    contextlogofile=""
    context_url=""
    code="ptpkimage17"
    range_value="50"
    alpharange="false"
    full="true"
    scalemobile="0.6"
    scaletablet="0.8"
/>














<events name="SkinPlusevents"
    onxmlcomplete=""   
    keep="true"
/>

<events name="SkinPlusLanguage_event"
    onTourStart="SkinPluslangg();"
    changetourlanguage="SkinPluslangg();"
    keep="true"
/>






<action name="SkinPluslangg">
set(language_var, get(tour_language));


if(device.touch,
set(layer[SkinPlushelpScreenFg].url, '%FIRSTXML%/graphics/skinplus/help_screen_fg_mb.png');
,
set(layer[SkinPlushelpScreenFg].url, '%FIRSTXML%/graphics/skinplus/help_screen_fg.png');
);

</action>



<action name="buildMenuBar">
    ifnot (SkinPlusbarbuilt, SkinPlusbuildMenu(); set(SkinPlusbarbuilt, true););
</action>


  <style name="SkinPlus_btn_style"
         keep="true"


         edge="right"
         align="right"

         x="0" y="0"


         width="40" height="40"

         crop="0|0|60|60"
         onovercrop="0|60|60|60"
         ondowncrop="0|120|60|60"




         onhover="showTooltip('plugin', SkinPlusmenuTooltipStyle, bottom);"
         onout="hideTooltip();"




         />

 <style name="SkinPlus_btn_style_icons"
         keep="true"


         edge="right"
         align="right"

         x="0" y="0"


         width="40" height="40"






         onhover="showTooltip('plugin', SkinPlusmenuTooltipStyle, bottom);"
         onout="tween(alpha,1,0.5);hideTooltip();"




         />


 <style name="SkinPlus_btnf_style"
        keep="true"
        edge="right"
        align="right"
        x="0" y="0"
        width="40" height="prop"
        scale="0.8"
        onover=""

        onhover="showTooltip('plugin', SkinPlusmenuTooltipStyle, bottom);"
        onout="hideTooltip();"
        />

  <style name="SkinPlus_style"
             keep="true"
             onhover="showTooltip('plugin', SkinPlusmenuTooltipStyle);"
             onout="hideTooltip();"
/>

<style name="SkinPlus_style_lang"
     keep="true"
     onover="set(alpha, 0.8);  "
     onout="set(alpha, 1); hideTooltip();"
     onhover="showTooltip('plugin', SkinPlusmenuTooltipStyle);"
/>

<style name="SkinPlus_btnf_style_float"
       keep="true"

       scale="0.8"
       onover=""



       onhover="showTooltip('plugin', SkinPlusmenuTooltipStyle, bottom);"
       onout="hideTooltip();"




             width="100"
             height="prop"

       />
 <style name="SkinPlus_style"
            keep="true"
            onhover="showTooltip('plugin', SkinPlusmenuTooltipStyle);"
            onout="hideTooltip();"
/>



  <style name="SkinPlus_btn_style_off"
         keep="true"
         edge="right"
         align="right"

         x="0" y="0"
         width="40" height="40"
         onhover="showTooltip('plugin', SkinPlusmenuTooltipStyle, bottom);"
         onout="hideTooltip();"
         />

<layer name="SkinPlus_footer"
         keep="true"
		 type="container"
         bgcolor="0xb9b9b9"
         bgalpha="0"
         x="0"
         y="0"
         enabled="false"
		 visible="false"
		 align="bottom"
		 edge="bottom"
		 zorder="2"
         height="60"
         width="100%"
          />








<events name="SkinPlus_footerevents"
    onTourStart=""
    keep="true" />


<action name="SkinPlushidefooter">
    tween(layer[SkinPlus_footer].y, -60, 0.2);
    delayedcall(0.4 ,set(layer[SkinPlus_footer].visible, false));
</action>

<action name="setTourLanguage">
  if (%1 == null,
    trace("CHANGE TOUR LANGUAGE : NO LANGUAGE SET");
   ,
    set(tour_language, %1);

    events.dispatch(changetourlanguage);
  );
</action>




<action name="SkinPlusshowfooter">

if (SkinPlusIsOpened,

	set(layer[SkinPlus_footer].visible, true);


    tween(layer[SkinPlus_footer].y, 0, 0.1);
    ,
    SkinPlushidefooter();

    );
</action>

<layer name="SkinPlus_menu_bg"
          keep="true"
          type="container"
          zorder="3"
          width="40"
          height="40"
          align="bottom"
          x="0" y="5"
          maskchildren="false"
          rotate="0"
          visible="false"
          scalechildren="true"




    >







<layer name="SkinPlusbtn_in"



url="%FIRSTXML%/graphics/skinplus/btn_zoom_in.png"
style="SkinPlus_btn_style"




            ondown="viewControlZoomIn(false); "
            onup="viewControlZoomStop();
"

            visible="false"
            devices="desktop|tablet|mobile"
            tooltip="SkinPluszoomInTip"
            />
<layer name="SkinPlusbtn_out"



            url="%FIRSTXML%/graphics/skinplus/btn_zoom_out.png"
            style="SkinPlus_btn_style"



            ondown="viewControlZoomOut(false);
  "
            onup="viewControlZoomStop();
"


            visible="false"
            devices="desktop|tablet|mobile"
            tooltip="SkinPluszoomOutTip"
            />

























<layer name="SkinPlusbtn_hidecontrols"



            url="%FIRSTXML%/graphics/skinplus/btn_hide_controls.png"
            style="SkinPlus_btn_style"




           onclick="stopdelayedcall(autoclose);SkinPlushideMenuControls();hideTourControls();
"
           visible="false"
           tooltip="SkinPlushideControlsTip"
           />
<layer name="SkinPlusbtn_showcontrols"



            url="%FIRSTXML%/graphics/skinplus/btn_show_controls.png"
            style="SkinPlus_btn_style"




           onclick="SkinPlusshowMenuControls();showTourControls();
 "
           tooltip="SkinPlusdisplayControlsTip"
           visible="false"
           />
 </layer>


<action name="SkinPlusbtn_home_action">
      hideTooltip();lookto(get(panoview.h),get(panoview.v),get(panoview.fov),smooth(100,20,50));
</action>





<action name="SkinPlushideMenuControls">

set(SkinPlusIsOpened, false);

set(layer[SkinPlusbtn_hidecontrols].visible, false);
set(layer[SkinPlusbtn_showcontrols].visible, true);
set(layer[SkinPlusbtn_lang_off].visible, false);
set(layer[SkinPlusbtn_lang].visible, false);
set(layer[SkinPlusbtn_home].visible, false);
set(layer[SkinPlusbtn_in].visible, false);
set(layer[SkinPlusbtn_out].visible, false); 
set(layer[SkinPlus_menu_bg].width, get(SkinPlusbackgroundwidthwhenclosed));
set(layer[SkinPlus_menu_bg].visible, true);
SkinPlushidefooter();
</action>

<action name="SkinPlusshowMenuControls">
set(SkinPlusIsOpened, true);
SkinPlusshowfooter();
set(layer[SkinPlusbtn_hidecontrols].visible, true);
set(layer[SkinPlusbtn_showcontrols].visible, false);
set(layer[SkinPlus_menu_bg].visible, true);

set(layer[SkinPlusbtn_share].visible, true);
set(layer[SkinPlusbtn_search].visible, true);
set(layer[SkinPlusbtn_shotp].visible, true);
set(layer[SkinPlusbtn_menu].visible, true);
set(layer[SkinPlusbtn_gallery].visible, true);
set(layer[SkinPlusbtn_pdf].visible, true);
set(layer[SkinPlusbtn_web].visible, true);
set(layer[SkinPlusbtn_lang_off].visible, false);
set(layer[SkinPlusbtn_lang].visible, true);

set(layer[SkinPlusbtn_in].visible, true);
set(layer[SkinPlusbtn_out].visible, true);
















set(layer[SkinPlus_menu_bg].width, get(SkinPlusbackgroundwidthwhenopened));


</action>





<events name="SkinPlusControlplan_pano"
keep="true"
onnewpano="set(little, 0);if (SkinPlusIsOpened,set(layer[SkinPlusbtn_little].visible, true);set(layer[SkinPlusbtn_little_off].visible, false););SkinPlusControlplan();"

/>

<action name="SkinPlusControlplan">
if (scene[get(xml.scene)].planar,
set(layer[SkinPlusbtn_little].alpha, 0.4);
set(layer[SkinPlusbtn_little].onclick, "");
set(layer[SkinPlusbtn_little].tooltip, "SkinPluslittle_disable_tip");
,
set(layer[SkinPlusbtn_little].alpha, 1.0);
set(layer[SkinPlusbtn_little].tooltip, "SkinPluslittle_tip");
set(layer[SkinPlusbtn_little].onclick, "SkinPlussetViewLittlePlanet();hideHotspots();
pauseautorotation();
");
);
</action>


<action name="SkinPlusHideLittle_btn">

	set(layer[SkinPlusbtn_little].visible, false);
    set(layer[SkinPlusbtn_little_off].visible, false);

</action>

<action name="SkinPlusShowlittle_btn">
if ( little != 1,
	set(layer[SkinPlusbtn_little].visible, true);
    set(layer[SkinPlusbtn_little_off].visible, false);

    ,

    set(layer[SkinPlusbtn_little].visible, false);
    set(layer[SkinPlusbtn_little_off].visible, true);
    );
</action>

<action name="SkinPlusupdateLittleButtons">

    if (SkinPlusIsOpened,

        SkinPlusShowlittle_btn();
    ,
        SkinPlusHideLittle_btn();
    );
</action>


<action name="SkinPlussetViewLittlePlanet">


	set(sceneisfull360, false);
	if(scene[get(xml.scene)].full360,
		sub(viewhfov, panoview.hmax, panoview.hmin);
		if (viewhfov == 360,
			sub(viewvfov, panoview.vmax, panoview.vmin);
			if (viewvfov == 180,
				set(sceneisfull360, true);
			);
		);
	);
	if (sceneisfull360 AND (device.webgl OR device.flash),
		if(normalViewActivated,stopSetViewTweens(););
		if(current_view_isflat === true,
			setViewNonFlat(VFOV);
		);
		SkinPlussetViewLittlePlanetComplete();

        
	);
</action>

<action name="SkinPlussetViewLittlePlanetComplete">
set(little, 1);
SkinPlusupdateLittleButtons();
	set(backtonormalfirst,false);
	if(view.pannini GE 1.0, set(backtonormalfirst,true));
	if(view.stereographic == false, set(backtonormalfirst,true));
	if(backtonormalfirst, hideTooltip();tween(view.fisheye, 0.0 ,distance(1.0, 0.25), easeOutQuad, WAIT); );
	set(view.stereographic, true);
	set(view.fisheyefovlink, 1.5);
	tween(view.architectural, 0.0, 0.25);
	tween(view.vlookat, 90, distance(179, 1.50));
	tween(view.pannini, 0.0, distance(1.0, 0.75), easeOutQuad, if(panniniViewActivated,restoreViewFromPannini();););
	if(panoview.fovmax LE 150, set(view.fovmax, 150); , set(view.fovmax, get(panoview.fovmax)); );
	tween(view.fisheye, 1.0, distance(1.0, 0.75));
	tween(view.fov, 150, distance(179, 0.75));
</action>

<action name="SkinPlussetViewNormal">

	if(current_view_isflat === true,
		setViewNonFlat(VFOV);
	);
	SkinPlussetViewNormalComplete();
</action>

<action name="SkinPlussetViewNormalComplete">
set(little, 0);
SkinPlusupdateLittleButtons();
	set(view.fisheyefovlink, 0.5);
	set(view.fovmax, get(panoview.fovmax));
	tween(view.architectural, 0.0, distance(1.0, 0.45));
	tween(view.pannini, 0.0, distance(1.0, 0.45), easeOutQuad, if(panniniViewActivated,restoreViewFromPannini();););
	tween(view.vlookat, get(panoview.v), distance(90, 0.45));
	tween(view.fov, get(panoview.fov), distance(50, 0.45));
	tween(view.fisheye, 0.0, distance(1.0, 0.45),
	set(view.stereographic,false);
	);

</action>




<action name="SkinPlusshow_language_box">
set(layer[SkinPlusbtn_lang].visible, true);
set(layer[SkinPlusbtn_lang_off].visible, false);
</action>

<action name="SkinPlushide_language_box">
set(layer[SkinPlusbtn_lang_off].visible, true);
set(layer[SkinPlusbtn_lang].visible, false);
</action>










<layer name="SkinPlusmenuTooltipStyle"
	keep="true"
	enabled="false"
	capture="false"
	url="%FIRSTXML%/graphics/textfield.swf"
	align="center"
	roundedge="5"
	background="true"
	backgroundcolor="0xc054db"
	backgroundalpha="1"
	border="false"
	css="color:#ffffff;font-family:Helvetica;font-size:13px;text-align:left;"
	height="20"
	autoheight="true"
	autowidth="auto"
	padding="10"
	selectable="false"
	zorder="0"
	visible="false"
	html=""
	edge="bottom"
	xoffset="-10"
	yoffset="-10"
/>  








<layer name="SkinPlusspotTooltipStyle"
	keep="true"
	enabled="false"
	capture="false"
	url="%FIRSTXML%/graphics/textfield.swf"
	align="center"
	roundedge="5"
     
	background="true"
	backgroundcolor="0xa63fd0"
	backgroundalpha="1"  
	border="false"  
	css="color:#ffffff;font-family:Helvetica;font-size:13px;text-align:left;"
	height="20"
	autoheight="true"
	autowidth="auto"
	padding="10"
	selectable="false"
	zorder="0"
	visible="false"
	html=""

    edge="top"
	xoffset="0"
	yoffset="10"


/>
 




<action name="SkinPlusbuildMenu">
    
    set(SkinPlusbutton_pos, 0);
    set(nnn,0);


	set(SkinPlusbackgroundwidthwhenclosed, 40);

inc(nnn, 1);


    set(layer[SkinPlusbtn_hidecontrols].x, get(SkinPlusbutton_pos));

    set(layer[SkinPlusbtn_showcontrols].x, -get(SkinPlusbutton_pos));


    inc(SkinPlusbutton_pos, 45);
















































if (device.desktop || device.tablet || device.mobile,
inc(nnn, 2);
        set(layer[SkinPlusbtn_out].x, get(SkinPlusbutton_pos));
        inc(SkinPlusbutton_pos, 45);
        set(layer[SkinPlusbtn_in].x, get(SkinPlusbutton_pos));
        inc(SkinPlusbutton_pos, 45);
);

if (device.desktop || device.tablet || device.mobile,

      dec(SkinPlusbutton_pos, 5);
      set(SkinPlusbackgroundwidthwhenopened, get(SkinPlusbutton_pos));
      set(layer[SkinPlus_menu_bg].width, get(SkinPlusbackgroundwidthwhenopened));
	 
);
</action>




<events name="SkinPlusStartTourEvents" onTourStart="SkinPlusCallOnStartTour();" keep="true" />
<action name="SkinPlusCallOnStartTour">

		
		SkinPlusshowMenuControls();

</action>


<action name="SkinPlusbluron" type="Javascript" >
myname = 'blur(10px)'
$("canvas")
  .css('filter',myname),
  ('-webkitFilter',myname),
  ('-mozFilter',myname),
  ('-oFilter',myname),
  ('-msFilter',myname);
</action>

<action name="SkinPlusbluroff" type="Javascript" >
$( "canvas" ).css({"-webkit-filter": "blur(0px)","filter": "blur(0px)" });
</action>
<style name="button" type="text"
	       css="text-align:center;"
	       padding="4 8"
	       mergedalpha="false"
	       bgborder="4 0xFFFFFF 1"
	       bgroundedge="5"
	       bgshadow="0 1 4 0x000000 1.0"
	       onover="set(bgcolor, 0xC7E4FC);"
	       onout="calc(bgcolor, pressed ? 0x90CAF9 : 0xFFFFFF);"
	       ondown="set(bgcolor, 0x90CAF9);"
	       onup="calc(bgcolor, hovering ? 0xC7E4FC : 0xFFFFFF);"
	       />




<!-- ********** -->
<!-- Super Box -->
<!-- id : SuperBox Name :  Super Box -->
<!-- ********** -->

<!-- Superbox v.1.7 - Copyright Panotourplugin.com - 2021 -->
<!-- Code Maurizio Chiocchetti    -->
<include url="%FIRSTXML%/graphics/superbox/core.xml" />

<events name="SuperBoxremovescroll_event"
keep="true"
onxmlcomplete="SuperBoxremove_scroll();"
devices="desktop"
/>

<action name="SuperBoxremove_scroll"  type="javascript" >
<![CDATA[
        $('head').append('<style type="text/css">  * { scrollbar-width: none;  } body ::-webkit-scrollbar { width: 0 !important }    body { scrollbar-width: none; }    body { -ms-overflow-style: none; } ::-webkit-scrollbar {width: 0px;background: transparent;});</style>');
]]>
</action>

<action name="SuperBoxset_css_id" type="Javascript">
  caller.sprite.id = args[1];
</action>

<sb_settings
    nameu="Young-soo Seo"
    emailu="dreamvrad@naver.com"
/>


<events name="global_event"
keep="true"
onloadcomplete=""
changetourlanguage="if(SuperBoxisOpen,removelayer(SuperBoxcontents);removelayer(SuperBoxcontents);set(SuperBoxhsho, null);set(SuperBoxhsho2, null);SuperBoxshow();, removelayer(SuperBoxcontents);removelayer(SuperBoxcontents);set(SuperBoxhsho, null);set(SuperBoxhsho2, null););"

/>






<events name="SuperBoxstartDescrition"
keep="true"
onremovepano="SuperBoxreset_contents_hide();"
/>



<action name="SuperBoxreset_contents" >
  SuperBoxhide();removelayer(SuperBoxcontents);set(SuperBoxhsho, null);set(SuperBoxhsho2, null);delayedcall(0.1,SuperBoxshow(););
</action>
<action name="SuperBoxreset_contents_hide" >
  SuperBoxhide();removelayer(SuperBoxcontents);set(SuperBoxhsho, null);set(SuperBoxhsho2, null);SuperBoxhide();
</action>


<action name="SuperBoxSetVarGlobal" autorun="onstart">

<!--





set(SuperBoxposition_box,center);
set(SuperBoxposition_box_y,center);
-->

</action>



<action name="SuperBoxvis_bar" >
  set(SuperBoxbar_var,0);
  inc(SuperBoxbar_var,1);
  inc(SuperBoxbar_var,1);
  inc(SuperBoxbar_var,1);
  if(SuperBoxbar_var LT 4,
      set(layer[SuperBoxcontainer_button].visible, true);
      ,
      set(layer[SuperBoxcontainer_button].visible, false);
  );
</action>


<action name="SuperBoxconvert" type="Javascript" >
<![CDATA[
var krpano = document.getElementById("krpanoSWFObject");
var decodeEntities = (function() {
  var element = document.createElement('div');
  function decodeHTMLEntities (str) {
    if(str && typeof str === 'string') {
      str = str.replace(/<script[^>]*>([\S\s]*?)<\/script>/gmi, '');
      str = str.replace(/<\/?\w(?:[^"'>]|"[^"]*"|'[^']*')*>/gmi, '');
      element.innerHTML = str;
      str = element.textContent;
      element.textContent = '';
    }
    return str;
  }
  return decodeHTMLEntities;
})();

var SuperBoxtext = args[1];

var SuperBoxtext = decodeEntities(args[1]);

krpano.set('SuperBoxhsho2', SuperBoxtext);

]]>

</action>




<action name="SuperBoxadd_html_code" type="Javascript">
        <![CDATA[

        var mmsiz = 40 + 0;
        var SuperBoxdiv = document.createElement("div");

        SuperBoxdiv.style.webkitUserSelect =
        SuperBoxdiv.style.MozUserSelect =
        SuperBoxdiv.style.msUserSelect =
        SuperBoxdiv.style.userSelect = "text";

        SuperBoxdiv.setAttribute("id","SuperBoxmydiv");
        if(args[2] == "desk"){
        SuperBoxdiv.setAttribute("style", ' -webkit-overflow-scrolling: touch;  height:100%;  color:#ffffff; text-transform:none; font-family:Helvetica; font-size:14px; box-sizing:border-box; text-align:left; font-weight:normal;font-style:normal;overflow-y:scroll;padding:0px;height:100%;');
        } else if(args[2] == "mobile"){

        SuperBoxdiv.setAttribute("style", ' -webkit-overflow-scrolling: touch;  height:100%;  color:#ffffff; text-transform:none; font-family:Helvetica; font-size:11px; box-sizing:border-box; text-align:left; font-weight:normal;font-style:normal;overflow:scroll;padding:0px;height:100%;');
        } else if(args[2] == "tablet"){

        SuperBoxdiv.setAttribute("style", ' -webkit-overflow-scrolling: touch;  height:100%;  color:#ffffff; text-transform:none; font-family:Helvetica; font-size:13px; box-sizing:border-box; text-align:left; font-weight:normal;font-style:normal;overflow:scroll;padding:0px;height:100%;');
        }

        function stopPropagation(e){ e.stopPropagation(); }
		function preventDefault(e){ e.preventDefault(); }

        SuperBoxdiv.addEventListener("wheel", stopPropagation, true);
		SuperBoxdiv.addEventListener("mousewheel", stopPropagation, true);
		SuperBoxdiv.addEventListener("DOMMouseScroll", stopPropagation, true);
        SuperBoxdiv.addEventListener("touchstart", function(event){
        krpano.control.preventTouchEvents = false; event.stopPropagation(); },
        true);

		SuperBoxdiv.addEventListener("touchend", function(event){ krpano.control.preventTouchEvents = true; event.stopPropagation(); }, true);
		SuperBoxdiv.addEventListener("gesturestart", preventDefault, true);

        SuperBoxdiv.innerHTML = args[1];

        caller.sprite.appendChild(SuperBoxdiv);
        $('#SuperBoxmydiv a').css("color","#");
        $('#SuperBoxmydiv a').css("text-decoration","none");

 ]]>

 </action>


<action name="SuperBoxconvertiframe" type="javascript" >
<![CDATA[
    var krpano = document.getElementById("krpanoSWFObject");
    var SuperBoxmyiframeurl = args[1];
    SuperBoxcodeBlock = '<iframe  src="'+ SuperBoxmyiframeurl +'" style="background-color:#000000;" name="opo" scrolling="no" allowtransparency="true" frameborder="0" marginheight="0px" marginwidth="0px" height="100%" width="100%" allowfullscreen>'+'</iframe>';
    krpano.set('SuperBoxmyiframe', SuperBoxcodeBlock);
]]>
</action>






 ######   ######## ######## ######## ######## ##     ## ########
##    ##  ##          ##       ##    ##        ##   ##     ##
##        ##          ##       ##    ##         ## ##      ##
##   #### ######      ##       ##    ######      ###       ##
##    ##  ##          ##       ##    ##         ## ##      ##
##    ##  ##          ##       ##    ##        ##   ##     ##
 ######   ########    ##       ##    ######## ##     ##    ##


<action name="SuperBoxgettext">



 if(%1 !== null,
SuperBoxconvertiframe(get(%1));
set(SuperBoxhsho, get(SuperBoxmyiframe));
if(device.desktop,
set(layer[SuperBoxcontents].onloaded,SuperBoxadd_html_code(get(SuperBoxhsho),desk));
);
if(device.mobile,
set(layer[SuperBoxcontents].onloaded,SuperBoxadd_html_code(get(SuperBoxhsho),mobile));
);
if(device.tablet,
set(layer[SuperBoxcontents].onloaded,SuperBoxadd_html_code(get(SuperBoxhsho),tablet));
);
,
 );











  </action>


 ######  ##     ##  #######  ##      ##
##    ## ##     ## ##     ## ##  ##  ##
##       ##     ## ##     ## ##  ##  ##
 ######  ######### ##     ## ##  ##  ##
      ## ##     ## ##     ## ##  ##  ##
##    ## ##     ## ##     ## ##  ##  ##
 ######  ##     ##  #######   ###  ###


<action name="SuperBoxshow">
if (device.desktop || device.tablet || device.mobile,
    set(SuperBoxautoplay,%3);pauseautorotation(forceplugin);


set(SuperBoxdatatr, %1);

set(layer[SuperBoxbox].visible, false);
set(layer[SuperBoxbox].alpha, 0);
set(SuperBoxisOpen, true);

SuperBoxCreatebox(SuperBoxdatatr,get(%2));
SuperBoxSlideOn();

SuperBoxback_to_position_container_button();
set(layer[SuperBoxopencloseButton].visible, false);
set(layer[SuperBoxfullscreen].visible, false);
);
</action>

##     ## #### ########  ########
##     ##  ##  ##     ## ##
##     ##  ##  ##     ## ##
#########  ##  ##     ## ######
##     ##  ##  ##     ## ##
##     ##  ##  ##     ## ##
##     ## #### ########  ########


<action name="SuperBoxhide">

if(SuperBoxisOpen, );
resumeautorotation(forceplugin);

SuperBoxslideOff();

 set(SuperBoxhsho, null);set(SuperBoxhsho2, null);

if(SuperBoxFullOn,
SuperBoxfullscreen_run();
);
set(SuperBoxisOpen, false);
set(SuperBoxFullOn, false);
if(get(SuperBoxminize),
set(layer[SuperBoxbox].alpha,0);
delayedcall(1,SuperBoxresize();
););

tween(layer[SuperBoxbox].alpha, 0,0.5,linear,set(layer[SuperBoxbox].visible,false);set(layer[SuperBoxbox].bgborder, 0 0x ););
<!--


-->

    set(SuperBoxbarhide,true);

    set(layer[SuperBoxopencloseButton].visible, false);

    if(SuperBoxFullOn,
 set(layer[SuperBoxfullscreen].visible,true);
     set(SuperBoxFullOn,false);

    removelayer(SuperBoxbox);
    removelayer(SuperBoxcontents);



</action>



<action name="SuperBoxremoveiframe" type="javascript" >
    <![CDATA[
    var el = document.getElementsByTagName("iframe")[0];
    if (el !== undefined){
    el.parentNode.removeChild(el);}
    ]]>
</action>


<action name="SuperBoxSlideOn">

    tween(layer[SuperBoxoverlay].alpha,1,0.5);
    tween(layer[SuperBoxbigclose].alpha,1,0.5);


    set(layer[SuperBoxbox].alpha,0);
    set(layer[SuperBoxbox].x, 0);
    set(layer[SuperBoxbox].y, 80);
    set(layer[SuperBoxbox].align,center);
    set(layer[SuperBoxbox].edge,center);
    tween(layer[SuperBoxbox].alpha,1,0.5,linear);








</action>



 ######  ##           #######  ######## ########
##    ## ##          ##     ## ##       ##
##       ##          ##     ## ##       ##
 ######  ##          ##     ## ######   ######
      ## ##          ##     ## ##       ##
##    ## ##          ##     ## ##       ##
 ######  ########     #######  ##       ##


 <action name="SuperBoxslideOff">

    tween(layer[SuperBoxoverlay].alpha,0,0.5);
    tween(layer[SuperBoxbigclose].alpha,0,0.5);




    set(layer[SuperBoxbox].x, 0);
    set(layer[SuperBoxbox].y, 80);
    set(layer[SuperBoxbox].align,center);
    set(layer[SuperBoxbox].edge,center);
    tween(layer[SuperBoxbox].alpha,0,0.5,linear);

 </action>



##     ##  #######  ##     ## ########
###   ### ##     ## ##     ## ##
#### #### ##     ## ##     ## ##
## ### ## ##     ## ##     ## ######
##     ## ##     ##  ##   ##  ##
##     ## ##     ##   ## ##   ##
##     ##  #######     ###    ########


<action name="SuperBoxmoveonpercent" >
tween(layer[SuperBoxbox].alpha,1,0);
if(%1,

add(SuperBoxwidth_percent, get(layer[SuperBoxbox].width),0);
txtadd(SuperBoxres_w, get(SuperBoxwidth_percent),'%');


tween(layer[SuperBoxbox].x,get(SuperBoxres_w),0.5,linear,set(layer[SuperBoxbox].visible,true););

,

add(SuperBoxheight_percent, get(layer[SuperBoxbox].height), 80);
  txtadd(SuperBoxres_h, get(SuperBoxheight_percent),'%');


    tween(layer[SuperBoxbox].y,get(SuperBoxres_h),0.5,linear,set(layer[SuperBoxbox].visible,true););


);

</action>



<action name="SuperBoxmoveonnormal">
tween(layer[SuperBoxbox].alpha,1,0);

if(%1,

    add(SuperBoxrealpositionx, get(layer[SuperBoxbox].width), 0);
    tween(layer[SuperBoxbox].x, get(SuperBoxrealpositionx),0.5,linear,set(layer[SuperBoxbox].visible,true););
    ,
    add(SuperBoxrealpositiony, get(layer[SuperBoxbox].height), 80);
    tween(layer[SuperBoxbox].y, get(SuperBoxrealpositiony),0.5,linear,set(layer[SuperBoxbox].visible,true););
);


</action>

<action name="SuperBoxmove">

SuperBoxshow_control_button();

if(device.desktop,
SuperBoxmoveonnormal(%1);
);

if(device.mobile,
SuperBoxmoveonpercent(%1);
);

if(device.tablet,
SuperBoxmoveonpercent(%1);
);

</action>

<action name="SuperBoxmoveoffpercent" >
    if(%1,

    add(SuperBoxwidth_percent_b, get(layer[SuperBoxbox].width), 40);
    mul(SuperBoxres_w_b, get(SuperBoxwidth_percent_b),-1);
    txtadd(SuperBoxres_w_b, get(SuperBoxres_w_b),'%');

    tween(layer[SuperBoxbox].x,get(SuperBoxres_w_b),calc(0.5+1),linear,set(layer[SuperBoxbox].visible,false););


    ,

    add(SuperBoxwidth_percent_b, get(layer[SuperBoxbox].height), 40);
    mul(SuperBoxres_w_b, get(SuperBoxwidth_percent_b),-1);
    txtadd(SuperBoxres_w_b, get(SuperBoxres_w_b),'%');

    tween(layer[SuperBoxbox].y,get(SuperBoxres_w_b),calc(0.5+1),linear,set(layer[SuperBoxbox].visible,false););



    );

</action>

<action name="SuperBoxmoveoffnormal" >
if(%1,
    add(SuperBoxrealpositionx, get(layer[SuperBoxbox].width), 40);
    mul(SuperBoxback, get(SuperBoxrealpositionx),-1);

    tween(layer[SuperBoxbox].x, get(SuperBoxback),0.5,,set(layer[SuperBoxbox].visible,false););

    ,

    add(SuperBoxrealpositionx, get(layer[SuperBoxbox].height), 40);
    mul(SuperBoxback, get(SuperBoxrealpositionx),-1);

    tween(layer[SuperBoxbox].y, get(SuperBoxback),0.5,linear,set(layer[SuperBoxbox].visible,false););

    );
</action>

<action name="SuperBoxmoveoff">

if(device.desktop,
SuperBoxmoveoffnormal(%1);
);

if(device.mobile,
SuperBoxmoveoffpercent(%1);
);

if(device.tablet,
SuperBoxmoveoffpercent(%1);
);

</action>

<events name="SuperBoxrotateve"
keep="true"
onresize="SuperBoxcheck_portrait();SuperBoxhide();"
devices="mobile.or.tablet"
/>

<action name="SuperBoxcheck_portrait"  devices="mobile.or.tablet">
if(stagewidth GT stageheight,
set(SuperBoxportrait, false);
,
set(SuperBoxportrait, true);
);
</action>



 ######  ########  ########    ###    ######## ########    ########   #######  ##     ##
##    ## ##     ## ##         ## ##      ##    ##          ##     ## ##     ##  ##   ##
##       ##     ## ##        ##   ##     ##    ##          ##     ## ##     ##   ## ##
##       ########  ######   ##     ##    ##    ######      ########  ##     ##    ###
##       ##   ##   ##       #########    ##    ##          ##     ## ##     ##   ## ##
##    ## ##    ##  ##       ##     ##    ##    ##          ##     ## ##     ##  ##   ##
 ######  ##     ## ######## ##     ##    ##    ########    ########   #######  ##     ##


<events name="SuperBoxset_opt_type_event"
keep="true"
onxmlcomplete="SuperBoxset_opt_type_action();"
/>

<action name="SuperBoxset_opt_type_action" >
set(SuperBoxtypeofcall, "website");
</action>


<action name="SuperBoxCreatebox">
set(SuperBoxFullOn,false);

set(SuperBoxdatares, %1);

SuperBoxgettext(get(SuperBoxdatares), get(%2));

if(frst,,
if (device.desktop || device.tablet || device.mobile,
addlayer(SuperBoxbox);
addlayer(SuperBoxcontents);
<!--set(layer[SuperBoxcontents].ondown, SuperBoxdraglayer(););
set(layer[SuperBoxcontents].bgcapture, true);-->
);
);
SuperBoxcheckboxpos();
set(layer[SuperBoxcontainer_button].parent, layer[SuperBoxbox]);
set(layer[SuperBoxbox].bgalpha,);
set(layer[SuperBoxbox].bgcolor, 0x000000);
set(layer[SuperBoxbox].bgalpha, 1);

if(device.desktop,
set(layer[SuperBoxbox].width,1280);
set(layer[SuperBoxbox].height,900);
);


if(device.mobile,
if(SuperBoxportrait,
set(layer[SuperBoxbox].width,100%);
set(layer[SuperBoxbox].height,90%);
,
set(layer[SuperBoxbox].width,100%);
set(layer[SuperBoxbox].height,90%);
);
);

if(device.tablet,
if(SuperBoxportrait,
set(layer[SuperBoxbox].width,100%);
set(layer[SuperBoxbox].height,90%);
,
set(layer[SuperBoxbox].width,100%);
set(layer[SuperBoxbox].height,90%);
);
);


set(layer[SuperBoxbox].visible, false);

set(layer[SuperBoxbox].safearea, false);
set(layer[SuperBoxopencloseButton].onclick,
if(SuperBoxisOpen,

SuperBoxhide();set(SuperBoxisOpen,false);););
set(layer[SuperBoxbox].align, center);
set(layer[SuperBoxbox].bgcapture, true);
set(layer[SuperBoxbox].capture, true);
set(layer[SuperBoxbox].autoalpha, true);
set(layer[SuperBoxbox].handcursor, true);
set(layer[SuperBoxcontents].bgcapture,false);
set(layer[SuperBoxcontents].capture,false);
set(layer[SuperBoxbox].zorder,100);
set(layer[SuperBoxbox].enabled, true);
set(layer[SuperBoxbox].onloaded, SuperBoxset_css_id('SuperBoxBoox'););

set(layer[SuperBoxbox].keep, true);
set(layer[SuperBoxbox].type, container);
<!--set(layer[SuperBoxbox].onup, set(scale,1);set(alpha,1););-->
set(layer[SuperBoxcontents].bgalpha,0);
set(layer[SuperBoxcontents].bgcolor,0x555);
set(layer[SuperBoxbox].maskchildren, true);
set(layer[SuperBoxcontents].width,100%);


    set(layer[SuperBoxcontents].wordwrap, false);
    set(layer[SuperBoxcontents].height,100%);


set(layer[SuperBoxcontents].wordwrap, true);
set(layer[SuperBoxcontents].visible, true);
set(layer[SuperBoxcontents].align, left);
set(layer[SuperBoxcontents].edge, left);
set(layer[SuperBoxcontents].x, 0);
set(layer[SuperBoxcontents].y, 0);
set(layer[SuperBoxcontents].parent, layer[SuperBoxbox]);

set(layer[SuperBoxcontents].bgcapture, true);
set(layer[SuperBoxcontents].handcursor, false);
set(layer[SuperBoxcontents].enabled, true);
set(layer[SuperBoxcontents].keep, true);
set(layer[SuperBoxcontents].type, text);
<!--set(layer[SuperBoxcontents].zorder, 80);-->
set(layer[SuperBoxcontainer_button].visible,false);
set(layer[SuperBoxbox].bgroundedge,  1 1 1 1);
</action>


<action name="SuperBoxcheckboxpos" >








</action>


######## ##     ## ##       ##
##       ##     ## ##       ##
##       ##     ## ##       ##
######   ##     ## ##       ##
##       ##     ## ##       ##
##       ##     ## ##       ##
##        #######  ######## ########


<action name="SuperBoxfullscreen_run">
    if(SuperBoxFullOn,
    set(layer[SuperBoxbox].width,get(SuperBoxbase_w));


    set(layer[SuperBoxbox].height,get(SuperBoxbase_h));
    set(layer[SuperBoxbox].x,get(SuperBoxbase_x));
    set(layer[SuperBoxbox].y,get(SuperBoxbase_y));
    set(layer[SuperBoxbox].edge,get(SuperBoxbase_edge));
    set(layer[SuperBoxbox].align,get(SuperBoxbase_align));
    set(layer[SuperBoxfullscreen].visible,true);
    set(layer[SuperBoxfullscreen].tooltip,SuperBoxt_of);
    set(SuperBoxFullOn,false);
    set(layer[SuperBoxcontainer_button].x,-20);
    set(layer[SuperBoxcontainer_button].bgalpha, 1);
    SuperBoxback_to_position_container_button();
    <!--set(layer[SuperBoxbox].y, 80);-->
    set(layer[SuperBoxbox].zorder,100);
    set(layer[SuperBoxbox].bgroundedge,  1 1 1 1);
    ,
    set(layer[SuperBoxbox].bgroundedge,  1 1 1 1);
    set(layer[SuperBoxfullscreen].tooltip,SuperBoxt_cf);
    set(layer[SuperBoxresize_layer].visible,false);
    copy(SuperBoxbase_w,layer[SuperBoxbox].width);
    copy(SuperBoxbase_h,layer[SuperBoxbox].height);
    copy(SuperBoxbase_x,layer[SuperBoxbox].x);
    copy(SuperBoxbase_y,layer[SuperBoxbox].y);
    copy(SuperBoxbase_edge,layer[SuperBoxbox].edge);
    copy(SuperBoxbase_align,layer[SuperBoxbox].align);
    set(layer[SuperBoxfullscreen].x,get(layer[SuperBoxresize_layer].x));
    set(layer[SuperBoxfullscreen].y,get(layer[SuperBoxresize_layer].y));
    set(layer[SuperBoxfullscreen].align,get(layer[SuperBoxresize_layer].align));
    set(layer[SuperBoxfullscreen].edge,get(layer[SuperBoxresize_layer].edge));
    set(layer[SuperBoxbox].width,100%);
    set(layer[SuperBoxbox].height,100%);
    set(layer[SuperBoxbox].align,center);
    set(layer[SuperBoxbox].edge,center);
    set(layer[SuperBoxbox].x,0);
    set(layer[SuperBoxbox].y,0);
    set(layer[SuperBoxbox].zorder,100);
    set(layer[SuperBoxfullscreen].visible, true);
    set(SuperBoxFullOn,true);
</action>


########  ########  ######  #### ######## ########
##     ## ##       ##    ##  ##       ##  ##
##     ## ##       ##        ##      ##   ##
########  ######    ######   ##     ##    ######
##   ##   ##             ##  ##    ##     ##
##    ##  ##       ##    ##  ##   ##      ##
##     ## ########  ######  #### ######## ########


<action name="SuperBoxresize">
if(%1,
    set(layer[SuperBoxbartitle].alpha,0);
    set(layer[SuperBoxresize_layer].tooltip,SuperBoxt_up);
    set(SuperBoxminize,true);
    set(layer[SuperBoxbox].x,0);
    set(layer[SuperBoxbox].y,0);
    set(layer[SuperBoxbox].edge,bottomright);
    set(layer[SuperBoxbox].align,bottomright);
    set(layer[SuperBoxbox].edge,bottomright);
    tween(layer[SuperBoxbox].width,20%,0.2);
    tween(layer[SuperBoxbox].height,10%,0.2);
    set(layer[SuperBoxresize_layer].onclick, SuperBoxresize(););
    set(layer[SuperBoxresize_layer].url, '%FIRSTXML%/graphics/superbox/icoup.png');
    set(layer[SuperBoxfullscreen].visible,false);
    set(layer[SuperBoxfullscreen].enabled,0);
    set(layer[SuperBoxopencloseButton].alpha,0);
    set(layer[SuperBoxopencloseButton].enabled,0);
    set(layer[SuperBoxbox].bgroundedge,  1 1 1 1);
,
    set(layer[SuperBoxbox].bgroundedge,  1 1 1 1);
    SuperBoxback_to_position_container_button();
    set(layer[SuperBoxbox].x, 0);
    set(layer[SuperBoxbox].y, 80);
    set(layer[SuperBoxfullscreen].visible,true);
    set(layer[SuperBoxfullscreen].enabled,1);
    set(layer[SuperBoxopencloseButton].alpha,1);
    set(layer[SuperBoxopencloseButton].enabled,1);
    delayedcall(1,set(layer[SuperBoxresize_layer].tooltip,SuperBoxt_dw););
    set(layer[SuperBoxbox].align, center);
    set(layer[SuperBoxbox].edge, center);

    if(device.desktop,
        set(layer[SuperBoxbox].width,1280);
        set(layer[SuperBoxbox].height,900);
            );
        if(device.mobile,
            if(SuperBoxportrait,
            set(layer[SuperBoxbox].width,100%);
            set(layer[SuperBoxbox].height,90%);
        ,
            set(layer[SuperBoxbox].width,100%);
            set(layer[SuperBoxbox].height,90%);
            );
        );

    if(device.tablet,
        if(SuperBoxportrait,
        set(layer[SuperBoxbox].width,100%);
        set(layer[SuperBoxbox].height,90%);
        ,
        set(layer[SuperBoxbox].width,100%);
        set(layer[SuperBoxbox].height,90%);
        );
    );

    set(layer[SuperBoxresize_layer].onclick, SuperBoxresize(true););
    set(layer[SuperBoxresize_layer].url, '%FIRSTXML%/graphics/superbox/icodw.png');
    set(SuperBoxminize,false);

);
  </action>



<action name="SuperBoxshow_control_button">

</action>


<action name="SuperBoxmove_content" type="javascript" >
        <![CDATA[
        if(args[1] == 'true'){
            $("#SuperBoxmydiv").animate({'padding-top':"+=40px"},200);
        }
        if(args[1] == 'false'){
            $("#SuperBoxmydiv").animate({'padding-top':"-=40px"},500);
        }

        ]]>
        </action>


<action name="SuperBoxback_to_position_container_button">

    SuperBoxpos_bar(topleft,0,0,100%,40,left,left,20,20,8,0,right,right,20,20,8,0,left,left,20,20,0,20,8);






</action>


<action name="SuperBoxpos_bar" >
  set(layer[SuperBoxcontainer_button].align,%1);
  set(layer[SuperBoxcontainer_button].edge,%1);
  set(layer[SuperBoxcontainer_button].x,%2);
  set(layer[SuperBoxcontainer_button].y,%3);
  set(layer[SuperBoxcontainer_button].width,%4);
  set(layer[SuperBoxcontainer_button].height,%5);

  set(layer[SuperBoxopencloseButton].align,%12);
  set(layer[SuperBoxopencloseButton].edge,%13);
  set(layer[SuperBoxopencloseButton].width,%14);
  set(layer[SuperBoxopencloseButton].height,%15);
  set(layer[SuperBoxopencloseButton].x,%16);
  set(layer[SuperBoxopencloseButton].y,%17);

<!--  set(layer[SuperBoxresize_layer].align,%12);
  set(layer[SuperBoxresize_layer].edge,%13);
  set(layer[SuperBoxresize_layer].width,%14);
  set(layer[SuperBoxresize_layer].height,%15);
  set(layer[SuperBoxresize_layer].x,%16);
  set(layer[SuperBoxresize_layer].y,%17);
  -->
  set(layer[SuperBoxresize_layer].align,%6);
  set(layer[SuperBoxresize_layer].edge,%7);
  set(layer[SuperBoxresize_layer].width,%8);
  set(layer[SuperBoxresize_layer].height,%9);
  set(layer[SuperBoxresize_layer].x,%10);
  set(layer[SuperBoxresize_layer].y,%11);

  set(layer[SuperBoxfullscreen].align,%18);
  set(layer[SuperBoxfullscreen].edge,%19);
  set(layer[SuperBoxfullscreen].width,%20);
  set(layer[SuperBoxfullscreen].height,%21);
  set(layer[SuperBoxfullscreen].y,%22);
  set(layer[SuperBoxfullscreen].x,%24);
</action>

<action name="SuperBoxpos_bar_v" >

  set(layer[SuperBoxcontainer_button].align,%1);
  set(layer[SuperBoxcontainer_button].edge,%1);
  set(layer[SuperBoxcontainer_button].x,%2);
  set(layer[SuperBoxcontainer_button].y,%3);
  set(layer[SuperBoxcontainer_button].width,%4);
  set(layer[SuperBoxcontainer_button].height,%5);

  set(layer[SuperBoxopencloseButton].align,%12);
  set(layer[SuperBoxopencloseButton].edge,%13);
  set(layer[SuperBoxopencloseButton].width,%14);
  set(layer[SuperBoxopencloseButton].height,%15);
  set(layer[SuperBoxopencloseButton].x,%16);
  set(layer[SuperBoxopencloseButton].y,%17);

  set(layer[SuperBoxresize_layer].align,%6);
  set(layer[SuperBoxresize_layer].edge,%7);
  set(layer[SuperBoxresize_layer].width,%8);
  set(layer[SuperBoxresize_layer].height,%9);
  set(layer[SuperBoxresize_layer].x,%10);
  set(layer[SuperBoxresize_layer].y,%11);
  set(layer[SuperBoxfullscreen].align,%18);
  set(layer[SuperBoxfullscreen].edge,%19);
  set(layer[SuperBoxfullscreen].width,%20);
  set(layer[SuperBoxfullscreen].height,%21);
  set(layer[SuperBoxfullscreen].x,%22);
  set(layer[SuperBoxfullscreen].y,%24);
</action>



<layer name="SuperBoxcontainer_button"
         keep="true" tag=""  enabled="true" alpha="1" type="container"  bgalpha="1" bgcapture="false" capture="false" visible="true" bgcolor="0xc7c7c7" zorder="100" maskchildren="true" scalechildren="true"
          parent="SuperBoxbox"

/>

  <layer name="SuperBoxopencloseButton"
         keep="true" url="" tag="" align="top" edge="center"  visible="false"  enabled="true" handcursor="true" tooltip="SuperBoxt_ic" onhover="" onover="tween(alpha,0.5,0.3,easeinoutquad);" onout="tween(alpha,1,0.5,easeinoutquad);" parent="layer[SuperBoxcontainer_button]"
/>

  <layer name="SuperBoxresize_layer"
         keep="true"  url="%FIRSTXML%/graphics/superbox/icodw.png"  tag=""  visible="false"  alpha="1" enabled="true" tooltip="SuperBoxt_dw" handcursor="true" onhover=""  onclick="SuperBoxresize(true);" parent="layer[SuperBoxcontainer_button]" onover="tween(alpha,0.5,0.3,easeinoutquad);" onout="tween(alpha,1,0.5,easeinoutquad);"

/>

  <layer name="SuperBoxfullscreen"
         keep="true"  url=""  tag=""     visible="false"  enabled="true" tooltip="SuperBoxt_of" onhover="" onclick="SuperBoxfullscreen_run();" handcursor="true"  onover="tween(alpha,0.5,0.3,easeinoutquad);" onout="tween(alpha,1,0.5,easeinoutquad);" parent="layer[SuperBoxcontainer_button]"
         />


<layer name="SuperBoxoverlay" keep="true" enabled="true" bgcapture="false" handcursor="false"  type="container" safearea="false" bgcolor="0x000000" width="100%" height="100%" alpha="0" autoalpha="true" bgalpha="0.80000000000000004" align="center" x="0" y="0" zorder="30" />


<layer name="SuperBoxbigclose"
         keep="true"  width="30" height="30" align="topright"  url="%FIRSTXML%/graphics/superbox/icocloseb.png"  edge="topright" x="0" y="0" enabled="true" handcursor="true" tooltip="SuperBoxclose_big" onhover="" onover="" onout="" parent="layer[SuperBoxoverlap]" onclick="SuperBoxhide();set(alpha,0); " zorder="60"
         autoalpha="true" alpha="0"
/>




<!-- ********** -->
<!-- Website Box -->
<!-- id : websiteViewer -->
<!-- ********** -->

<ptplugin name="websiteViewer" engine="kolorBox">
	<settings>
		<option name="position" value="top" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="80" type="int" />
		<option name="external_padding" value="5" type="int" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_width" value="100" type="int" />
		<option name="container_width_unit" value="percent" type="string" />
		<option name="container_height" value="100" type="int" />
		<option name="container_height_unit" value="percent" type="string" />
		<option name="container_color" value="000000" type="string" />
		<option name="container_alpha" value="0.90000762951094837" type="float" />
		<option name="container_topleft_border_radius" value="0" type="int" />
		<option name="container_topright_border_radius" value="0" type="int" />
		<option name="container_bottomleft_border_radius" value="0" type="int" />
		<option name="container_bottomright_border_radius" value="0" type="int" />
		<option name="container_border_width" value="0" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="1" type="float" />
		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.7000076295109483" type="float" />

		<option name="title_displayed" value="false" type="bool" />
		<option name="title_position" value="top" type="string" />
		<option name="title_font" value="Verdana" type="string" />
		<option name="title_size" value="14" type="int" />
		<option name="title_weight" value="normal" type="string" />
		<option name="title_style" value="normal" type="string" />
		<option name="title_decoration" value="none" type="string" />
		<option name="title_color" value="000000" type="string" />
		<option name="caption_displayed" value="false" type="bool" />
		<option name="iframe_scrolling" value="auto" type="string" />
		<option name="iframe_default_width" value="1280" type="int" />
		<option name="iframe_default_height" value="800" type="int" />
		<option name="iframe_devices_width" value="1280" type="int" />
		<option name="iframe_devices_height" value="800" type="int" />
		<option name="force_ios_scrolling" value="true" type="bool" />
		<option name="fullscreen_displayed" value="false" type="bool" />
		<option name="fullscreen_position" value="topleft" type="string" />
		<option name="fullscreen_text" value="websiteViewerfullscreen_text" type="string" />




		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="topright" type="string" />
		<option name="close_text" value="websiteViewerclose_text" type="string" />

		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_websiteViewer')" type="string" />
		<option name="zorder" value="3" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_websiteViewer">
	set(ptplugin[websiteViewer].jsready, true);
</action>

<action name="openWebsite_websiteViewer">
	ifnot(ptplugin[websiteViewer].isOpen,
		set(ptplugin[websiteViewer].isOpen, true);
		set(ptplugin[websiteViewer].doNotDeleteMe, false);
		getmessage(websiteViewer_boxurl, %1);
		txtadd(websiteViewer_boxurl, ?iframe=true);
		pauseautorotation(forceplugin);

		js(invokePluginFunction(websiteViewer, loadSingleArrayItem, get(websiteViewer_boxurl), %2));
		events.dispatch(onremovedisplayedobject);
	,
		if('%1' != websiteViewer_boxurl,
			closeKolorBox_websiteViewer();
			delayedcall(0.3,openWebsite_websiteViewer(%1,%2););
		);
	);
</action>

<action name="toggleWebsite_websiteViewer">
	js(invokePluginFunction(websiteViewer, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_websiteViewer">
	js(invokePluginFunction(websiteViewer, closeKolorBox));
</action>

<action name="closeKolorBoxCallback_websiteViewer">
	resumeautorotation(forceplugin);

	set(ptplugin[websiteViewer].isOpen, false);
</action>

<action name="changeLanguage_websiteViewer">
	if(ptplugin[websiteViewer].jsready,
		stopdelayedcall(delay_websiteViewer);
		js(invokePluginFunction(websiteViewer, changeLanguage));
	,
		delayedcall(delay_websiteViewer, 0.1, changeLanguage_websiteViewer(););
	);
</action>

<events name="kolorBoxEvents_websiteViewer" 
	keep="true"
	changetourlanguage="changeLanguage_websiteViewer();"
	/>

  <!-- Hide / Show Controls -->
  <action name="hideTourControls">set(tour_displaycontrols, false);events.dispatch(hidetourcontrols);</action>
  <action name="showTourControls">set(tour_displaycontrols, true); events.dispatch(showtourcontrols);</action>

<action name="setTourLanguage">
  if (%1 == null,
    showlog();
    trace("CHANGE TOUR LANGUAGE : NO LANGUAGE SET");
   ,
    set(tour_language, %1);
    js(eventTourChangeLanguage(get(tour_language)));
    events.dispatch(changetourlanguage);
  );
</action>

<action name="viewControlZoomIn">
	if(%1,
		if(%2,
			if(%2 LT view.fovmin,
				zoomto(get(view.fovmin));
			,
				if(%2 LT view.fov,
					zoomto(%2);
				);
			);
		,
			set(fov_moveforce, -1);
			delayedcall(0.1, viewControlZoomStop());
		);
	,
		set(fov_moveforce, -1);
	);
</action>
<action name="viewControlZoomOut">
	if(%1,
		if(%2,
			if(%2 GT view.fovmax,
				zoomto(get(view.fovmax));
			,
				if(%2 GT view.fov,
					zoomto(%2);
				);
			);
		,
			set(fov_moveforce, +1);
			delayedcall(0.1, viewControlZoomStop());
		);
	,
		set(fov_moveforce, +1);
	);
</action>
<action name="viewControlZoomStop">
	set(fov_moveforce, 0);
</action>

  <!-- Sounds Management -->
  <plugin name="soundinterface"
          preload="true"
          url.html5="%FIRSTXML%/graphics/soundinterface.js"
          rootpath="%$videos_sounds_path%/sounds/"
          backgroundsound=""
          backgroundsoundloops="true"
          bgsound="false"
          bgsoundpaused="false"
          bgsoundloopended="false"
          bgsoundtoforce = "false"
          volumeinitialized="false"
          autopause="false"
          autounlock="true"
          worldscale="1.0"
          started="true"
          keep="true"/>
  
  <events name="soundmanagementevents"
          onnewpano="if(plugin[soundinterface].started,playbackgroundsound(););"
          onxmlcomplete="soundinterfaceonxmlcomplete();"
          keep="true"/>
  
  <action name="soundinterfaceonxmlcomplete">
    ifnot(plugin[soundinterface].volumeinitialized,
      div(plugin[soundinterface].volume, tour_soundsvolume, 100);
      set(plugin[soundinterface].volumeinitialized,true);
    );
  </action>
  
  <action name="playsound3Dwhenpossible">
    set(really_play_sound, true);
    if (tour_current_played_sound,
      if (%1 == tour_current_played_sound,
        delete(tour_current_played_sound);
        set(tour_current_played_sound_state, 0);
        delete(tour_current_played_sound_paused);
        stopsound(%1);
        set(really_play_sound, false);
        if(%4,
          delete(tour_current_played_sound_pausesound);
          resumeTourSoundsActions(true,true,true,true,true);
        );
      );
    );
    if (really_play_sound,
      if (tour_current_played_sound,
        stopsound(get(tour_current_played_sound));

        ifnot(%4,
          if(tour_current_played_sound_pausesound,
            delete(tour_current_played_sound_pausesound);
            resumeTourSoundsActions(true,true,true,true,true);
          );
        );
      );
      if(%4,
        set(tour_current_played_sound_pausesound, true);
        pauseTourSoundsActions(true,false,true,true,true);
      );
      set(tour_current_played_sound, %1);
      if(tour_current_played_video,
        set(tour_current_played_sound_state, 2);
      ,
        set(tour_current_played_sound_state, 1);
      );
      set(tour_current_played_sound_paused, false);
      if (%3,
        div(volume, tour_soundsvolume, 100);
        if(%9 != null,
          if(%8 == 0,
            playsound_at_hv(%1, %2, %5, %6, 1000, true, get(volume), %7, stopsound3Dwhenpossible(%1,%4));
          ,
            playsound_at_hv(%1, %2, %5, %6, 1000, false, get(volume), %7, stopsound3Dwhenpossible(%1,%4));
          );
          setup3dsound(%1, 1.0, 1.0, inverse, HRTF);
        ,
          if(%8 == 0,
            playsound_at_hv(%1, %2, %5, %6, 1000, true, get(volume), %7);
          ,
            playsound_at_hv(%1, %2, %5, %6, 1000, false, get(volume), %7);
          );
          setup3dsound(%1, 1.0, 1.0, inverse, HRTF)
        );
      ,
        if(%6 != null,
          playsound(%1,%2,%5,stopsound3Dwhenpossible(%1,%4));
        ,
          playsound(%1,%2,%5);
        );
      );

      ifnot(tour_soundson,
        set(tour_current_played_sound_paused, true);
        pausesound(%1);
      );
    );
  </action>
  <action name="stopsound3Dwhenpossible">
    if (%1 == tour_current_played_sound,
      delete(tour_current_played_sound);
      set(tour_current_played_sound_state, 0);
      delete(tour_current_played_sound_paused);
      stopsound(%1);
      if(%2,
        delete(tour_current_played_sound_pausesound);
        resumeTourSoundsActions(true,true,true,true,true);
      );
    );
  </action>
  <action name="playbackgroundsound">
  if(playsound,
    if (xml.scene,
      if (scene[get(xml.scene)].backgroundsound,
        if (plugin[soundinterface].backgroundsound != scene[get(xml.scene)].backgroundsound,
          copy(plugin[soundinterface].backgroundsound, scene[get(xml.scene)].backgroundsound);
          copy(plugin[soundinterface].backgroundsoundloops, scene[get(xml.scene)].backgroundsoundloops);
          if (tour_soundson,
            set(plugin[soundinterface].bgsound, true);
            set(plugin[soundinterface].bgsoundpaused, false);
            set(plugin[soundinterface].bgsoundloopended, false);
            set(plugin[soundinterface].bgsoundtoforce, false);
            if(scene[get(xml.scene)].video == false OR (scene[get(xml.scene)].video == true AND scene[get(xml.scene)].scenevideomute == true),
              ifnot(plugin[soundinterface].backgroundsoundloops,
                playsound(bgsoundname, get(plugin[soundinterface].backgroundsound), get(plugin[soundinterface].backgroundsoundloops), stopbackgroundsoundoncomplete());
              ,
                playsound(bgsoundname, get(plugin[soundinterface].backgroundsound), get(plugin[soundinterface].backgroundsoundloops));
              );
            );
           ,
            set(plugin[soundinterface].bgsoundtoforce, true);
            set(plugin[soundinterface].bgsound, false);
          );
        ,
          if (tour_soundson,
            if((plugin[soundinterface].bgsoundpaused == true AND scene[get(xml.scene)].video == false) OR (scene[get(xml.scene)].video == true AND scene[get(xml.scene)].scenevideomute == true),
              resumesound(bgsoundname);
              set(plugin[soundinterface].bgsoundpaused, false);
            );
          ,
            set(plugin[soundinterface].bgsoundtoforce, true);
            set(plugin[soundinterface].bgsound, false);
          );
        );
      );
    );
  ,
    delayedcall(0.2, playbackgroundsound());
  );
  </action>
  <action name="stopbackgroundsoundoncomplete">
    if (plugin[soundinterface].backgroundsound,
    ifnot(plugin[soundinterface].backgroundsoundloops,
      set(plugin[soundinterface].backgroundsoundloops, true);
      set(plugin[soundinterface].bgsound, false);
      set(plugin[soundinterface].bgsoundpaused, false);
      set(plugin[soundinterface].bgsoundloopended, true);
    );
    );
  </action>
  <action name="resetbackgroundsoundifneeded">
    if (xml.scene,
      if (scene[get(xml.scene)].backgroundsound != scene[%1].backgroundsound,
        if(plugin[soundinterface].backgroundsound,
          stopsound(bgsoundname);
        );
        set(plugin[soundinterface].backgroundsound, "");
        set(plugin[soundinterface].backgroundsoundloops, true);
        set(plugin[soundinterface].bgsound, false);
        set(plugin[soundinterface].bgsoundpaused, false);
        set(plugin[soundinterface].bgsoundloopended, false);
      );
    );
  </action>
  <action name="pausebackgroundsound">
    if(plugin[soundinterface].backgroundsound,
      if (plugin[soundinterface].bgsound,
        if(plugin[soundinterface].bgsoundpaused == false AND plugin[soundinterface].bgsoundloopended == false,
          pausesound(bgsoundname);
          set(plugin[soundinterface].bgsoundpaused, true);
        );
      );
    );
    
  </action>
  <action name="resumebackgroundsound">
    set(bgSoundOnResume, true);
    set(forceBgSoundOnResume, true);
    if(layer[displayedStandardVideo],
    if(layer[displayedStandardVideo].pausebgsound AND tour_current_played_video,
      set(bgSoundOnResume, false);
      set(forceBgSoundOnResume, false);
    ););
    if(layer[webvideodisplay_player],
    if(layer[webvideodisplay_player].pausebgsound AND tour_current_played_web_video,
      set(bgSoundOnResume, false);
      set(forceBgSoundOnResume, false);
    ););
    if(tour_current_played_sound_pausesound AND tour_current_played_sound,
      set(bgSoundOnResume, false);
    );
    ifnot(plugin[soundinterface].backgroundsound AND scene[get(xml.scene)].backgroundsound,
      set(bgSoundOnResume, false);
    );
    if(videospots_playing GT 0,
      set(bgSoundOnResume, false);
      set(forceBgSoundOnResume, false);
    );
    if(bgSoundOnResume,
      if (plugin[soundinterface].backgroundsound,
        if (tour_soundson,
          if (plugin[soundinterface].bgsound AND plugin[soundinterface].bgsoundloopended == false,
            if((plugin[soundinterface].bgsoundpaused == true AND scene[get(xml.scene)].video == false) OR (scene[get(xml.scene)].video == true AND scene[get(xml.scene)].scenevideomute == true),
              resumesound(bgsoundname);
              set(plugin[soundinterface].bgsoundpaused, false);
          ,
            if(((plugin[soundinterface].bgsoundpaused == true OR plugin[soundinterface].bgsoundtoforce == true) AND scene[get(xml.scene)].video == false) OR (scene[get(xml.scene)].video == true AND scene[get(xml.scene)].scenevideomute == true),
              set(plugin[soundinterface].bgsound, true);
              set(plugin[soundinterface].bgsoundpaused, false);
              set(plugin[soundinterface].bgsoundloopended, false);
              set(plugin[soundinterface].bgsoundtoforce, false);
              ifnot(plugin[soundinterface].backgroundsoundloops,
                playsound(bgsoundname, get(plugin[soundinterface].backgroundsound), get(plugin[soundinterface].backgroundsoundloops), stopbackgroundsoundoncomplete());
              ,
                playsound(bgsoundname, get(plugin[soundinterface].backgroundsound), get(plugin[soundinterface].backgroundsoundloops));
              );
            );
          );
        );
      );
      
    ,
      if(forceBgSoundOnResume,
        playbackgroundsound();
        
      );
    );
  </action>
  <action name="preloadSounds">
  </action>

  <action name="play3DLocalSounds">
    if (xml.scene, if (scene[get(xml.scene)].haslocalsounds, playpanolocalsounds();););
  </action>
  <action name="stop3DLocalSounds">
    if (xml.scene, if (scene[get(xml.scene)].haslocalsounds, stoppanolocalsounds();););
  </action>
  <action name="resume3DLocalSounds">
    if (xml.scene, if (scene[get(xml.scene)].haslocalsounds, 
      set(kill3dSoundOnResume, true);
      if(layer[displayedStandardVideo],
      if(layer[displayedStandardVideo].pausebgsound,
      if(tour_current_played_video,
        set(kill3dSoundOnResume, false);
      );););
      if(layer[webvideodisplay_player],
      if(layer[webvideodisplay_player].pausebgsound,
      if(tour_current_played_web_video,
        set(kill3dSoundOnResume, false);
      );););
      if(tour_current_played_sound_pausesound,
      if(tour_current_played_sound,
        set(kill3dSoundOnResume, false);
      ););
      if(kill3dSoundOnResume,
        resumepanolocalsounds();
      );
    ););
  </action>
  
  <action name="pause3DLocalSounds">
    if (xml.scene, if (scene[get(xml.scene)].haslocalsounds, pausepanolocalsounds();););
  </action>
  <action name="set3DLocalSoundsVolume">
    if (xml.scene, if (scene[get(xml.scene)].haslocalsounds, setpanolocalsoundsvolume();););
  </action>
  
     <action name="playTourSounds">
    set(tour_soundson, true);
    events.dispatch(playtoursoundsevent);
    playbackgroundsound();
	resumeTourSoundsActions(true,true,true,true,true);
	  </action>
  <action name="stopTourSounds">
    set(tour_soundson, false);
    events.dispatch(stoptoursoundsevent);
    pauseTourSoundsActions(true,true,true,true,true);
  </action>
  
  <action name="setTourSoundsVolume">
    set(tour_soundsvolume, %1);
    events.dispatch(changetoursoundsevent);
    div(volume, tour_soundsvolume, 100);
    set(plugin[soundinterface].volume, get(volume));
    set3DLocalSoundsVolume();
  </action>
  
  <action name="playTourSoundsActions">
    if(%1,
      if(plugin[soundinterface],
        if(plugin[soundinterface].started,
        play3DLocalSounds();
        );
      );
    );
    if(%2,
      if(plugin[soundinterface],
        if(plugin[soundinterface].started,
          resumebackgroundsound();
        );
      );
    );
  </action>
  <action name="stopTourSoundsActions">
    if(%1,
      stop3DLocalSounds();
    );
    if(%2,
      stopSoundActionsSounds();
    );
    if(%3,
      stopVideoActionsSounds();
    );
    if(%4,
      pausebackgroundsound();
    );
  </action>
  <action name="resumeTourSoundsActions">
    if(%1,
      if(plugin[soundinterface],
        if(plugin[soundinterface].started,
        resume3DLocalSounds();
        );
      );
    );
    if(%2,
      resumeSoundActionsSounds();
    );
    if(%3,
      resumeVideoActionsSounds();
    );
    if(%4,
      if(%5,
        if(plugin[soundinterface],
          if(plugin[soundinterface].started,
            resumebackgroundsound();
          );
        );
      ,
        pausebackgroundsound();
      );
    );
  </action>
  <action name="pauseTourSoundsActions">
    if(%1,
      pause3DLocalSounds();
    );
    if(%2,
      pauseSoundActionsSounds();
    );
    if(%3,
      pauseVideoActionsSounds();
    );
    if(%4,
      if(%5,
        pausebackgroundsound();
      ,
        if(plugin[soundinterface],
          if(plugin[soundinterface].started,
            resumebackgroundsound();
          );
        );
      );
    );
  </action>

  <action name="stopSoundActionsSounds">
    if (tour_current_played_sound,
      delete(tour_current_played_sound_paused);
      stopsound(get(tour_current_played_sound));
      delete(tour_current_played_sound);
      set(tour_current_played_sound_state, 0);
    );
  </action>
  <action name="stopVideoActionsSounds">
    if(tour_current_played_video,
      if(layer[displayedStandardVideo],
        layer[displayedStandardVideo].stop();
        removelayer(displayedStandardVideo);
        if(layer[displayedStandardVideoOverlayButton], removelayer(displayedStandardVideoOverlayButton); );
        if(layer[displayedStandardVideoOverlay], removelayer(displayedStandardVideoOverlay); );
        delete(tour_current_played_video);
        set(tour_current_played_video_state, 0);
      );
    );
    if(tour_current_played_web_video,
      displayWebVideoObjectClose();
    );
  </action>
  <action name="resumeSoundActionsSounds">
    if (tour_current_played_sound,
      set(resumeSoundActionsVerification, true);
      if(tour_current_played_video,
        if(tour_current_played_sound_state LT tour_current_played_video_state,
          set(resumeSoundActionsVerification, false);
        );
      );
      if(resumeSoundActionsVerification,
        if (tour_soundson,
          if(tour_current_played_sound_paused,
            set(tour_current_played_sound_paused, false);
            resumesound(get(tour_current_played_sound));
          );
        );
      );
    );
  </action>
  <action name="resumeVideoActionsSounds">
    if(tour_current_played_video,
      set(resumeVideoActionsVerification, true);
      if(tour_current_played_sound,
        if(tour_current_played_video_state LT tour_current_played_sound_state,
          set(resumeVideoActionsVerification, false);
        );
      );
      if(resumeVideoActionsVerification,
        if (tour_soundson,
          if(device.flash OR (device.webgl AND !device.ios),
            div(volume, tour_soundsvolume, 100);
            set(layer[displayedStandardVideo].volume, get(volume));
          ,
            ifnot(device.ios,
              js(kpanotour.Sounds.startVideosSounds(get(volume)));
            ,
              if(tour_soundsvolume GT 0,
                set(layer[displayedStandardVideo].muted, false);
              ,
                set(layer[displayedStandardVideo].muted, true);
              );
            );
          );
        ,
          if(device.flash OR (device.webgl AND !device.ios),
            set(layer[displayedStandardVideo].volume, 0);
          ,
            ifnot(device.ios,
              js(kpanotour.Sounds.stopVideosSounds());
            ,
              set(layer[displayedStandardVideo].muted, true);
            );
          );
        );
      );
    );
  </action>
  <action name="pauseSoundActionsSounds">
    if (tour_current_played_sound,
      ifnot(tour_current_played_sound_paused,
        set(tour_current_played_sound_paused, true);
        pausesound(get(tour_current_played_sound));
      );
    );
  </action>
  <action name="pauseVideoActionsSounds">
    if(tour_current_played_video,
      if(device.flash OR (device.webgl AND !device.ios),
        set(layer[displayedStandardVideo].volume, 0);
      ,
        ifnot(device.ios,
          js(kpanotour.Sounds.stopVideosSounds());
        ,
          set(layer[displayedStandardVideo].muted, true);
        );
      );
    );
  </action>

</krpano>